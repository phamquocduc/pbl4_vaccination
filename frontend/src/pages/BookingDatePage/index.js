import React, { useState, useEffect } from 'react';
import axios from 'axios';
import './BookingDatePage.css';
import { Fragment } from 'react';
import Calendar from 'react-calendar';

function BookingDatePage() {
    // ƒêo·∫°n l·∫•y th√¥ng tin b·ªánh vi·ªán
    const [hospitalData, setHospitalData] = useState({ hospitalName: '', phoneNumber: '' });
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        const fetchHospitalData = async () => {
            try {
                const response = await axios.get('https://api.example.com/hospital-info');
                setHospitalData(response.data); // C·∫≠p nh·∫≠t d·ªØ li·ªáu t·ª´ API
            } catch (error) {
                console.error('L·ªói khi l·∫•y d·ªØ li·ªáu b·ªánh vi·ªán: ', error);
            } finally {
                setLoading(false); // ƒê·∫£m b·∫£o loading ƒë∆∞·ª£c t·∫Øt sau khi API ho√†n th√†nh
            }
        };

        fetchHospitalData();
    }, []);

    // ƒëo·∫°n ni l√† l√† set ƒë·ªïi v·ªõi l·∫•y th·ªùi gian ch·ªçn th√¢u
    const [selectedDate, setSelectedDate] = useState(null);
    const [timeSlots, setTimeSlots] = useState([]);
    const [showCalendar, setShowCalendar] = useState(true);

    const timeSlotOptions = {
        morning: ['07:00 - 08:00', '08:00 - 09:00', '09:00 - 10:00', '10:00 - 11:00'],
        afternoon: ['13:00 - 14:00', '14:00 - 15:00', '15:00 - 16:00'],
    };

    const handleDateChange = (date) => {
        setSelectedDate(date);
        setShowCalendar(false);
        setTimeSlots(timeSlotOptions); // Hi·ªÉn th·ªã c√°c khung gi·ªù cho ng√†y ƒë√£ ch·ªçn
    };

    const handleTimeSlotSelect = (slot) => {
        //console.log('Khung gi·ªù ƒë∆∞·ª£c ch·ªçn:', slot);
        // X·ª≠ l√Ω khi ng∆∞·ªùi d√πng ch·ªçn khung gi·ªù, nh∆∞ l∆∞u v√†o state ho·∫∑c g·ªçi API
        console.log(slot, selectedDate.toLocaleDateString());
    };

    return (
        <div className="wrapper">
            <div className="central-information">
                <div className="hospital-info-container">
                    <h3 className="hospital-info-title">Th√¥ng tin c∆° s·ªü y t·∫ø</h3>
                    <div className="hospital-info-details">
                        <div className="hospital-info-item">
                            <span className="hospital-icon">üè•</span>
                            <span className="hospital-text">{hospitalData.hospitalName}</span>
                        </div>
                        <div className="hospital-info-item">
                            <span className="phone-icon">üìû</span>
                            <span className="hospital-text">{hospitalData.phoneNumber}</span>
                        </div>
                    </div>
                </div>
            </div>
            <div className="date-time-picker">
                <h3 id="title">Vui l√≤ng ch·ªçn ng√†y kh√°m</h3>
                {showCalendar ? (
                    <Calendar
                        onChange={handleDateChange}
                        minDate={new Date()} // Ch·ªâ cho ph√©p ch·ªçn ng√†y t·ª´ h√¥m nay tr·ªü ƒëi
                        maxDate={new Date(new Date().setMonth(new Date().getMonth() + 1))} // Gi·ªõi h·∫°n ƒë·∫øn th√°ng sau
                    />
                ) : (
                    <div>
                        <h3>Ng√†y ƒë√£ ch·ªçn: {selectedDate.toLocaleDateString()}</h3>
                        <div className="time-slots">
                            <h4 style={{ color: 'red' }}>Bu·ªïi s√°ng</h4>
                            <div className="slot-container">
                                {timeSlotOptions.morning.map((slot, index) => (
                                    <button
                                        key={index}
                                        onClick={() => handleTimeSlotSelect(slot)}
                                        className="time-slot"
                                    >
                                        {slot}
                                    </button>
                                ))}
                            </div>
                            <h4 style={{ color: 'red' }}>Bu·ªïi chi·ªÅu</h4>
                            <div className="slot-container">
                                {timeSlotOptions.afternoon.map((slot, index) => (
                                    <button
                                        key={index}
                                        onClick={() => handleTimeSlotSelect(slot)}
                                        className="time-slot"
                                    >
                                        {slot}
                                    </button>
                                ))}
                            </div>
                            <button onClick={() => setShowCalendar(true)} id="choose-again-button">
                                Ch·ªçn l·∫°i ng√†y
                            </button>
                        </div>
                    </div>
                )}
            </div>
        </div>
    );
}

export default BookingDatePage;
